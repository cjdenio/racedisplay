<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        q7D+30z4/h+Ht+vNGlY3vQAAAABJRU5ErkJggg==
</value>
  </data>
</root>