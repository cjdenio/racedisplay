<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEACAAZFwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEBAAABAAgGAAAAs7DDWAAAFuBJ
        REFUeJztnWlslNX3x0+nLVA6TOnCUjYR2loUARcUqEqQxQVqUINxS0xcY8QoifrCJRoVfIFRCf5QAhpF
        QUFABBKXNgasooghlIrUtizaloJ2oVMKpaU9/xf9I0ppae+5z3Pv9H4/yUnf9Nx7zr3f+c48M88SRa0w
        AQCcJGC6AACAWWACADgOTAAAx4EJAOA4MAEAHAcmAIDjwAQAcByYAACOAxMAwHFgAgA4DkwAAMeBCQDg
        ODABABwHJgCA48AEAHAcmAAAjgMTAMBxYAIAOA5MAADHgQkA4DgwAQAcByYAgOPABABwHJgAAI4DEwDA
        cWACADgOTAAAx4EJAOA4MAEAHAcmAIDjwAQAcByYAACOAxMAwHFgAgA4DkwAAMeBCQDgODABABwHJgCA
        48AEAHAcmAAAjgMTAMBxYAIAOA5MAADHgQkA4DgwAQAcByYAgOPABABwHJgAAI4DEwDAcWACADgOTAAA
        x4EJAOA4MAEAHAcmAIDjwAQAcByYAACOAxMAwHFgAgA4DkwAAMeBCQDgODABABwHJgCA48AEAHAcmAAA
        jgMTAMBxYAIAOA5MAADHgQkA4DgwAQAcByYAgOPEmC5ASiAQoPT0dBo1ahRlZmZSZmYmjRgxghISEqhP
        nz7/REtLC9XV1f0TNTU1VFRURIWFhVRYWEh79+6lP/74w3Q7wGOgl7ZE/f9fNlpFFxk+fDjNmDGDZsyY
        Qddffz0lJiZqGbesrIxycnLom2++odzcXKqsrNQyLjAL9NI52Pbo27cvP/7445yfn89+0NzczFu2bOF7
        7rmHe/bsabx/BPTiYRBZUES7MX78eF6xYgUfP37cl808F1VVVbxo0SJOT083vh4I6MWDILKgiDaRkZHB
        a9euNbaR56KxsZHfffddTk1NNb4+COhFYxBZUMQ/0a9fP37nnXe4sbHR9B62S319PS9YsICDwaDx9XI9
        oBctQWRBEUxEPHPmTD5y5IjpPes0+/bt44kTJxpfN1cDetEWRKaL6NmzJy9evNj0HinR1NTEL730EkdH
        R5veSGcCetEeRCYLGDp0KO/evdv03oj54YcfOCUlxfRmdvuAXjwJIlOTjxo1iktLS03vhzYKCwt52LBh
        pje02wb04lkQmZj46quv5srKStP7oJ3S0lK++OKLTW9qtwvoxdMg8nvS6667jo8dO2Z6/T2jqqqKx40b
        Z3pju01AL54HkZ8TZmZmcnV1tel195zy8nIeMmSI8RdQpAf04n34eu1A//796aeffqILL7zQk/HLy8sp
        JyeH8vPz6ddff6X9+/dTOBym2tpaio6OplAoRH379qX09HQaPXo0XXbZZTR9+nRKSkrypJ6CggLKysqi
        uro6T8bv7kAv/uK528TFxfH27du1O+jhw4f51VdfVf44FQgE+JprruH//e9/HA6Htdf3zTffcExMjPF3
        1EgL6MXX9SbyY6Jly5ZpXayioiK+++67OTY2VluNwWCQH3/8cT58+LDWWl977TXjL6pIC+jF1/Um8nqS
        WbNmaVug2tpafuaZZ7Ru5tkRCoX49ddf55MnT2qp+dSpU5yVlWX8hRUpAb34rhciLydISUnhiooKLYtT
        UFDAaWlpvi3OhAkTuKysTEvtJSUlHB8fb/TFFQkBvbTis16IvJxg/fr1Whbls88+M/IiGjBgAOfl5Wnp
        YdmyZb7XH2kBvZzBR70QeTX4LbfcomUxVq5cyVFRUcaEGRcXx1u3btXSyzXXXGOsD9sDemmLT3oh8mLg
        QCDAv/32m3gR1q1bZ8XFFsFgkLdt2ybu58cffzTei40BvRjVC5EXAz/88MPiBfjll1+4R48exjf0dCQm
        JvLBgwfFfc2ZM8d4L7YF9GJUL0S6B+3duzcfOnRI1Hh1dTUPHz7c+EaeHePHj+eGhgZRb8XFxTh3AHqx
        SS9Eugd99tlnRU0zM8+ePdv4BrYXc+fOFff32GOPGe/DloBejOuFSOeAsbGx4p941q5da3zjzhfS472S
        khKjX17ZEtCLFXoh0jngvffeK2q2vr7elmusO4zLLruMT506Jeo1OzvbeB+mA3qxQi9EOgeUnu/9/PPP
        G9+wzsbbb78t6jU3N9d4D6YDerFCL0S6BpswYYKoyaqqqog6qy41NVX8pc8ll1xivA9TAb3YoRetDySd
        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
</value>
  </data>
</root>